openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'http://gateway-service:8080'
paths:
  /api/ToAccountServiceTransfer:
    post:
      operationId: transferToAccountService
      summary: Запрос на снятие обналичивание в account-service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashTransfer'
      responses:
        '200':
          description: Изменение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCashResponse'
  /api/editUserAccounts:
    post:
      summary: Обновление данных пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserForm'
      responses:
        '200':
          description: Изменение данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditUserResponse'
  /api/editPassword:
    post:
      summary: Смена пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '200':
          description: Успешная смена пароля
  /api/getMainPage:
    get:
      summary: Получение главной страницы пользователя
      responses:
        '200':
          description: Успешное получение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainPageResponse'

  /api/signup:
    post:
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationForm'
      responses:
        '200':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
              example:
                success: False
                cause: 'Логин существует'
        '400':
          description: Ошибка валидации (например, логин уже существует)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/getUser:
    post:
      summary: получение user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example: "user123"
              description: "Логин пользователя в виде строки"
      responses:
        '200':
          description: Успешное получение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFormLogin'
  /api/transferAccountService:
    post:
      operationId: transferFromToAccountService
      summary: перевод между аккаунтами
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'
          description: Успешный ответ
components:
  schemas:
    RegistrationForm:
      type: object
      properties:
        login:
          type: string
          description: "Уникальный логин пользователя"
          example: "john_doe"
        password:
          type: string
          format: password
          description: "Пароль пользователя"
          example: "securePassword123"
        confirm_password:
          type: string
          format: password
          description: "Подтверждение пароля"
          example: "securePassword123"
        name:
          type: string
          description: "ФИО пользователя"
          example: "Иван Иванов"
        birthdate:
          type: string
          format: date
          description: "Дата рождения (в формате YYYY-MM-DD)"
          example: "1990-01-01"
      required:
        - login
        - password
        - confirm_password
        - birthdate
        - name
    SignupResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Успешно ли регистрация
        cause:
          type: string
          description: В случаи не верной валидации
    UserForm:
      type: object
      properties:
        login:
          type: string
          description: "Уникальный логин пользователя"
          example: "user123"
        name:
          type: string
          description: "ФИО пользователя"
          example: "Иван Иванов"
        birthdate:
            type: string
            format: date
            description: "Дата рождения (в формате YYYY-MM-DD)"
            example: "1990-01-01"
      required:
        - login
        - name
        - birthdate
    AccountForm:
      type: object
      properties:
        accountId:
          type: number
          format: double
          description: "Уникальный идентификатор счёта"
          example: 100
        userName:
          type: string
          description: "логин пользователя"
          example: "user123"
        currency:
          $ref: '#/components/schemas/Currency'
        balance:
          type: number
          format: double
          description: "Баланс счёта"
          example: 1000.50
        isExists:
          type: boolean
          description: "существует ли аккаунт"
      required:
        - accountId
        - currency
        - balance
        - isExists
    AccountList:
      type: array
      items:
        $ref: '#/components/schemas/AccountForm'
    MainPageResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserForm'
        accounts:
          $ref: '#/components/schemas/AccountList'
        UserAccountsErrors:
          type: array
          items:
            type: string
        Currencys:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
        Users:
          type: array
          items:
            $ref: '#/components/schemas/Users'
      required:
        - user
        - accounts
    Currency:
      type: object
      properties:
        name:
          type: string
          description: "Код валюты (например, RUB, USD)"
          example: "USD"
        title:
          type: string
          description: "Полное название валюты"
          example: "Доллар США"
    UserFormLogin:
      type: object
      properties:
        login:
          type: string
          description: "Уникальный логин пользователя"
          example: "user123"
        role:
          type: string
        password:
          type: string
      required:
        - login
        - role
        - password
    EditUserResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Успешно ли регистрация
        cause:
          type: array
          items:
            type: string
          description: В случаи не верной валидации
    UpdateUserForm:
      type: object
      properties:
        name:
          type: string
          description: "ФИО пользователя"
          example: "Иван Иванов"
        birthdate:
          type: string
          format: date
          description: "Дата рождения (в формате YYYY-MM-DD)"
          example: "1990-01-01"
        accounts:
          type: array
          items:
            type: string
    PasswordChange:
      type: object
      properties:
        password:
          type: string
          format: password
          description: "Пароль пользователя"
          example: "securePassword123"
        confirm_password:
          type: string
          format: password
          description: "Подтверждение пароля"
          example: "securePassword123"
    AccountCashResponse:
      type: object
      properties:
        success:
          type: boolean
        cause:
          type: array
          items:
            type: string
          description: В случаи не верной валидации
    CashTransfer:
      type: object
      properties:
        currencyTo:
          type: string
        value:
          type: number
          format: double
        action:
          type: string
    Transfer:
      type: object
      properties:
        from_currency:
          type: string
        to_currency:
          type: string
        value:
          type: number
          format: double
        to_login:
          type: string
        summary:
          type: number
          format: double
    TransferResponse:
      type: object
      properties:
        success:
          type: boolean
        cause:
          type: array
          items:
            type: string
          description: В случаи не верной валидации
    Users:
      type: object
      properties:
        Login:
          type: string
        Name:
          type: string
    Error:
      type: object
      properties:
        error:
          type: string
          description: "Описание ошибки"
          example: "Логин уже существует"
        timestamp:
          type: string
          format: date-time
          description: "Время возникновения ошибки"
          example: "2025-07-20T12:34:56Z"