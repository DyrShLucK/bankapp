plugins {
	id 'java-library'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
description = 'Security-lib'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
	withJavadocJar()
	withSourcesJar()
}

repositories {
	mavenCentral()
}

ext {
	set('springBootVersion', '3.5.4')
	set('springCloudVersion', '2025.0.0')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
}

tasks.named('test') {
	useJUnitPlatform()
}
configurations {
	// Настройка для основного API библиотеки
	apiElements {
		attributes {
			attribute(Attribute.of("org.gradle.jvm.environment", String), "standard-jvm")
		}
	}
	// Настройка для основного Runtime библиотеки
	runtimeElements {
		attributes {
			attribute(Attribute.of("org.gradle.jvm.environment", String), "standard-jvm")
		}
	}
}